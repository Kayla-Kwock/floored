			for (int k = 0; k < turrets[i].get().size(); k++) {//By Turret
				for (int l = 0; l < turrets[i].get().at(k).size(); l++) {//By bullet in turret
				//	turrets[i].get().at(k).
				}//End Turret Bullet
			}//End Turret


			for (int l = 0; l < player.getHolstered().getAmmo().size(); l++) {//By bullet in player equipped gun
				player.getHolstered().getAmmo().at(l).moveRight(delta);// Move the bullet
				//if the bullet has been drawn long enough or goes off screen while active
				if ((player.getHolstered().getAmmo().at(l).getPunch() <= framebuffer) ||
					((player.getHolstered().getAmmo().at(l).getXL() >= window.getSize().x) &&
					(player.getHolstered().getAmmo().at(l).isActive()))) {
					player.getHolstered().getAmmo().at(l).setDead();// kill the bullet
				}
				window.draw(player.getHolstered().getAmmo().at(l).getSprite());// draw the bullet
				if (enemies[i].get().at(j).isDead()) {}//if the enemy is dead, do nothing with the bullet comparison
				else {
					if (i + 1 != player.getHolstered().getAmmo().at(l).getFloor() ||
						!player.getHolstered().getAmmo().at(l).isActive()) {//If the bullet being compared is not on the same floor or inactive
						break;//don't bother comparing it
					}
					//if the bullet is active and not dead, interact with enemies
					if (player.getHolstered().getAmmo().at(l).isActive() && player.getHolstered().getAmmo().at(l).isNotDead()) {
						PEcollision(player.getHolstered().getAmmo().at(l), enemies[i].get().at(j));
					}
					//if the bullet is hasn't been on screen long enough and the bullet is unofficially killed
					if (player.getHolstered().getAmmo().at(l).getPunch() > framebuffer &&
						player.getHolstered().getAmmo().at(l).getPunch() <= 0) {
							player.getHolstered().getAmmo().at(l).setPunch(player.getHolstered().getAmmo().at(l).getPunch() - 1);
					}
				}
			}//End Player Equipped Gun